<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="consumer" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="9.1.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="stopTime">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-7.0, -140.0]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={599, 22, 662, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[428, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.8075522464221928">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{196.80678423713235, 84.79687499999997}">
    </property>
    <property name="HlaManager" class="ptolemy.apps.hlacerti.lib.HlaManager">
        <display name="consumer"/>
        <property name="federateName" class="ptolemy.data.expr.Parameter" value="&quot;consumer&quot;">
            <display name="Federate's name"/>
        </property>
        <property name="federationName" class="ptolemy.data.expr.Parameter" value="&quot;CoSimulationFunctional&quot;">
            <display name="Federation's name"/>
        </property>
        <property name="fedFile" class="ptolemy.data.expr.FileParameter" value="CoSimulationFunctional.fed">
            <display name="Path for .fed file"/>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[100.0, -140.0]">
        </property>
    </property>
    <property name="enableBackwardTypeInference" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="stopTime" class="ptolemy.data.expr.Parameter" value="15">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-50.0, -110.0]">
        </property>
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textSize" class="ptolemy.data.expr.Parameter" value="10">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This demo shows a simple ConsumerProducer example involving &#10;three Ptolemy models as HLA/CERTI Federate. Each federate exchanges &#10;data in the CoSimulationFunctional Federation. Each federate could also&#10;be developped using Ptolemy, C++, Java or Python.&#10;&#10;The Producer entity of this example is composed of two Ptolemy models &#10;one for the skeleton part and the other one for the functional part (two &#10;Federates). The Consumer entity is composed of a single Ptolemy model &#10;(one Federate).&#10; &#10;The ProducerFunc Federate publishes an update of the &quot;val&quot; HLA attribute.&#10;The ProducerSkel Federate subscribes to the &quot;val&quot; attribute, receives updated&#10;values of this attribute, do some computations and publishes &quot;val1&quot;.&#10;ProducerFunc receives updates values of &quot;val1&quot; and publishes these values&#10;as &quot;val2&quot; to the Consumer Federate.&#10;&#10;The Consumer Federate receives updated values of &quot;val&quot;, &quot;val1&quot; and &quot;val2&quot; in&#10;order to show the values of HLA attributes exchanged in the whole Federation &#10;(value + timestamp).&#10;&#10;The consumer.xml model of this demo has to be launched in first and the&#10;producerSkel.xml in last.&#10;&#10;The CERTI environment defines environment variables&#10;(CERTI_HOME, PATH, LD_LIBRARY_PATH and DYLD_LIBRARY_PATH)&#10;and needs to be set in the terminal which runs Vergil.&#10;&#10;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-60.0, 35.0]">
        </property>
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textSize" class="ptolemy.data.expr.Parameter" value="8">
        </property>
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.4,0.4,0.4,1.0}">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Author: Gilles Lasnier.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[100.0, 15.0]">
        </property>
    </property>
    <entity name="val2" class="ptolemy.apps.hlacerti.lib.HlaSubscriber">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-45.0, 15.0]">
        </property>
    </entity>
    <entity name="TimedPlotter" class="ptolemy.actor.lib.gui.TimedPlotter">
        <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="val, val1, val2">
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={703, 340, 500, 344}, maximized=false}">
        </property>
        <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[500, 300]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[95.0, -45.0]">
        </property>
        <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="1.0000000000000001E-7" max="10.000000100000001"/>
<yRange min="0.0" max="8.0"/>
<default connected="no" marks="various"/>
</plot>?>
        </configure>
    </entity>
    <entity name="val" class="ptolemy.apps.hlacerti.lib.HlaSubscriber">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-45.0, -75.0]">
        </property>
    </entity>
    <entity name="val1" class="ptolemy.apps.hlacerti.lib.HlaSubscriber">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-45.0, -35.0]">
        </property>
    </entity>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        <vertex name="vertex1" value="[18.0, -135.0]">
        </vertex>
    </relation>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="val2.output" relation="relation3"/>
    <link port="TimedPlotter.input" relation="relation5"/>
    <link port="TimedPlotter.input" relation="relation"/>
    <link port="TimedPlotter.input" relation="relation3"/>
    <link port="val.output" relation="relation5"/>
    <link port="val1.output" relation="relation"/>
</entity>
