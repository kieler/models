graph G1
node arCodeReader {
	algorithm: org.eclipse.elk.box
	node N1 {
		node init {
			layout [ size: 42, 34 ]
		}
		node First {
			layout [ size: 52, 34 ]
		}
		node Second {
			layout [ size: 75, 34 ]
		}
		node Third {
			layout [ size: 59, 34 ]
		}
		node Symbol1W {
			layout [ size: 94, 34 ]
		}
		node Symbol2B {
			layout [ size: 90, 34 ]
		}
		node Symbol3W {
			layout [ size: 94, 34 ]
		}
		node Symbol3B {
			layout [ size: 90, 34 ]
		}
		node Symbol4W {
			layout [ size: 94, 34 ]
		}
		node Symbol4B {
			layout [ size: 90, 34 ]
		}
		node Symbol5W {
			layout [ size: 94, 34 ]
		}
		node Symbol5B {
			layout [ size: 90, 34 ]
		}
		node Symbol6W {
			layout [ size: 94, 34 ]
		}
		node Symbol6B {
			layout [ size: 90, 34 ]
		}
		node Symbol7B {
			layout [ size: 90, 34 ]
		}
		node Condition {
			layout [ size: 90, 34 ]
		}
		node Final1 {
			layout [ size: 63, 34 ]
		}
		node Final2 {
			layout [ size: 63, 34 ]
		}
		node Final3 {
			layout [ size: 63, 34 ]
		}
		node Final4 {
			layout [ size: 63, 34 ]
		}
		node ^end {
			layout [ size: 48, 34 ]
		}
		edge First0: init -> First {
			label L1: "1: Light < black / count = 0; digit[NumberOfDigits] = 0" {
				layout [ size: 372, 17 ]
			}
		}
		edge init0: init -> init {
			label L2: "2: start == true / EngineLeftSpeed = 100; EngineRightSpeed = 100" {
				layout [ size: 464, 17 ]
			}
		}
		edge First0_g5819: First -> First {
			label L3: "1: clock == true & Light < black / count = count + 1" {
				layout [ size: 352, 17 ]
			}
		}
		edge Second0: First -> Second {
			label L4: "2: Light > white / TickLength = count - 3; TickLengthMax = count + 3; count = 0" {
				layout [ size: 550, 17 ]
			}
		}
		edge init0_g3602: First -> init {
			label L5: "3: count >= 25 / count = 0" {
				layout [ size: 176, 17 ]
			}
		}
		edge Second0_g9089: Second -> Second {
			label L6: "1: clock == true & Light > white / count = count + 1" {
				layout [ size: 353, 17 ]
			}
		}
		edge Third0: Second -> Third {
			label L7: "2: Light < black & count >= TickLength / count = 0" {
				layout [ size: 349, 17 ]
			}
		}
		edge init0_g5878: Second -> init {
			label L8: "3: count >= 25 / count = 0" {
				layout [ size: 176, 17 ]
			}
		}
		edge Third0_g8258: Third -> Third {
			label L9: "1: clock == true & Light < black / count = count + 1" {
				layout [ size: 352, 17 ]
			}
		}
		edge Symbol1W0: Third -> Symbol1W {
			label L10: "2: Light > white & count >= TickLength / count = 0" {
				layout [ size: 350, 17 ]
			}
		}
		edge init0_g9743: Third -> init {
			label L11: "3: count >= 25 / count = 0" {
				layout [ size: 176, 17 ]
			}
		}
		edge Symbol1W0_g9372: Symbol1W -> Symbol1W {
			label L12: "1: clock == true & Light > white / count = count + 1" {
				layout [ size: 353, 17 ]
			}
		}
		edge Symbol2B0: Symbol1W -> Symbol2B {
			label L13: "2: Light < black & count >= TickLength & count <= TickLengthMax / count = 0; symbol1 = 1" {
				layout [ size: 633, 17 ]
			}
		}
		edge Symbol3B0: Symbol1W -> Symbol3B {
			label L14: "3: Light < black & count >= 2 * TickLength & count <= 2 * TickLengthMax / count = 0; symbol1 = 1; symbol2 = 1" {
				layout [ size: 767, 17 ]
			}
		}
		edge Symbol4B0: Symbol1W -> Symbol4B {
			label L15: "4: Light < black & count >= 3 * TickLength & count <= 3 * TickLengthMax / count = 0; symbol1 = 1; symbol2 = 1; symbol3 = 1" {
				layout [ size: 857, 17 ]
			}
		}
		edge Symbol2B0_g0502: Symbol2B -> Symbol2B {
			label L16: "1: clock == true & Light < black / count = count + 1" {
				layout [ size: 352, 17 ]
			}
		}
		edge Symbol3W0: Symbol2B -> Symbol3W {
			label L17: "2: Light > white & count >= TickLength & count <= TickLengthMax / count = 0; symbol2 = 0" {
				layout [ size: 634, 17 ]
			}
		}
		edge Symbol4W0: Symbol2B -> Symbol4W {
			label L18: "3: Light > white & count >= 2 * TickLength & count <= 2 * TickLengthMax / count = 0; symbol2 = 0; symbol3 = 0" {
				layout [ size: 768, 17 ]
			}
		}
		edge Symbol5W0: Symbol2B -> Symbol5W {
			label L19: "4: Light > white & count >= 3 * TickLength & count <= 3 * TickLengthMax / count = 0; symbol2 = 0; symbol3 = 0; symbol4 = 0" {
				layout [ size: 858, 17 ]
			}
		}
		edge Symbol6W0: Symbol2B -> Symbol6W {
			label L20: "5: Light > white & count >= 4 * TickLength & count <= 4 * TickLengthMax / count = 0; symbol2 = 0; symbol3 = 0; symbol4 = 0; symbol5 = 0" {
				layout [ size: 948, 17 ]
			}
		}
		edge Symbol3W0_g3749: Symbol3W -> Symbol3W {
			label L21: "1: clock == true & Light > white / count = count + 1" {
				layout [ size: 353, 17 ]
			}
		}
		edge Symbol4B0_g1971: Symbol3W -> Symbol4B {
			label L22: "2: Light < black & count >= TickLength & count <= TickLengthMax / count = 0; symbol3 = 1" {
				layout [ size: 633, 17 ]
			}
		}
		edge Symbol5B0: Symbol3W -> Symbol5B {
			label L23: "3: Light < black & count >= 2 * TickLength & count <= 2 * TickLengthMax / count = 0; symbol3 = 1; symbol4 = 1" {
				layout [ size: 767, 17 ]
			}
		}
		edge Symbol6B0: Symbol3W -> Symbol6B {
			label L24: "4: Light < black & count >= 3 * TickLength & count <= 3 * TickLengthMax / count = 0; symbol3 = 1; symbol4 = 1; symbol5 = 1" {
				layout [ size: 857, 17 ]
			}
		}
		edge Symbol3B0_g4316: Symbol3B -> Symbol3B {
			label L25: "1: clock == true & Light < black / count = count + 1" {
				layout [ size: 352, 17 ]
			}
		}
		edge Symbol4W0_g0556: Symbol3B -> Symbol4W {
			label L26: "2: Light > white & count >= TickLength & count <= TickLengthMax / count = 0; symbol3 = 0" {
				layout [ size: 634, 17 ]
			}
		}
		edge Symbol5W0_g0546: Symbol3B -> Symbol5W {
			label L27: "3: Light > white & count >= 2 * TickLength & count <= 2 * TickLengthMax / count = 0; symbol3 = 0; symbol4 = 0" {
				layout [ size: 768, 17 ]
			}
		}
		edge Symbol6W0_g5878: Symbol3B -> Symbol6W {
			label L28: "4: Light > white & count >= 3 * TickLength & count <= 3 * TickLengthMax / count = 0; symbol3 = 0; symbol4 = 0; symbol5 = 0" {
				layout [ size: 858, 17 ]
			}
		}
		edge Symbol4W0_g0658: Symbol4W -> Symbol4W {
			label L29: "1: clock == true & Light > white / count = count + 1" {
				layout [ size: 353, 17 ]
			}
		}
		edge Symbol5B0_g3460: Symbol4W -> Symbol5B {
			label L30: "2: Light < black & count >= TickLength & count <= TickLengthMax / count = 0; symbol4 = 1" {
				layout [ size: 633, 17 ]
			}
		}
		edge Symbol6B0_g7238: Symbol4W -> Symbol6B {
			label L31: "3: Light < black & count >= 2 * TickLength & count <= 2 * TickLengthMax / count = 0; symbol4 = 1; symbol5 = 1" {
				layout [ size: 767, 17 ]
			}
		}
		edge Symbol7B0: Symbol4W -> Symbol7B {
			label L32: "4: Light < black & count >= 3 * TickLength & count <= 3 * TickLengthMax / count = 0; symbol4 = 1; symbol5 = 1; symbol6 = 1" {
				layout [ size: 857, 17 ]
			}
		}
		edge Symbol4B0_g9386: Symbol4B -> Symbol4B {
			label L33: "1: clock == true & Light < black / count = count + 1" {
				layout [ size: 352, 17 ]
			}
		}
		edge Symbol5W0_g7623: Symbol4B -> Symbol5W {
			label L34: "2: Light > white & count >= 1 * TickLength & count <= 1 * TickLengthMax / count = 0; symbol4 = 0" {
				layout [ size: 678, 17 ]
			}
		}
		edge Symbol6W0_g1634: Symbol4B -> Symbol6W {
			label L35: "3: Light > white & count >= 2 * TickLength & count <= 2 * TickLengthMax / count = 0; symbol4 = 0; symbol5 = 0" {
				layout [ size: 768, 17 ]
			}
		}
		edge Condition0: Symbol4B -> Condition {
			label L36: "4: Light > white & count >= 4 * TickLength & count <= 4 * TickLengthMax / count = 0; symbol4 = 0; symbol5 = 0; symbol6 = 0; symbol7 = 0" {
				layout [ size: 948, 17 ]
			}
		}
		edge Symbol5W0_g9544: Symbol5W -> Symbol5W {
			label L37: "1: clock == true & Light > white / count = count + 1" {
				layout [ size: 353, 17 ]
			}
		}
		edge Symbol6B0_g9563: Symbol5W -> Symbol6B {
			label L38: "2: Light < black & count >= TickLength & count <= TickLengthMax / count = 0; symbol5 = 1" {
				layout [ size: 633, 17 ]
			}
		}
		edge Symbol7B0_g0511: Symbol5W -> Symbol7B {
			label L39: "3: Light < black & count >= 2 * TickLength & count <= 2 * TickLengthMax / count = 0; symbol5 = 1; symbol6 = 1" {
				layout [ size: 767, 17 ]
			}
		}
		edge Symbol5B0_g5370: Symbol5B -> Symbol5B {
			label L40: "1: clock == true & Light < black / count = count + 1" {
				layout [ size: 352, 17 ]
			}
		}
		edge Symbol6B0_g1762: Symbol5B -> Symbol6B {
			label L41: "2: Light > white & count >= TickLength & count <= TickLengthMax / count = 0; symbol5 = 0" {
				layout [ size: 634, 17 ]
			}
		}
		edge Symbol7B0_g2594: Symbol5B -> Symbol7B {
			label L42: "3: Light > white & count >= 2 * TickLength & count <= 2 * TickLengthMax / count = 0; symbol5 = 0; symbol6 = 0" {
				layout [ size: 768, 17 ]
			}
		}
		edge Condition0_g6843: Symbol5B -> Condition {
			label L43: "4: Light > white & count >= 3 * TickLength & count <= 3 * TickLengthMax / count = 0; symbol5 = 0; symbol6 = 0; symbol7 = 0" {
				layout [ size: 858, 17 ]
			}
		}
		edge Symbol6W0_g0072: Symbol6W -> Symbol6W {
			label L44: "1: clock == true & Light > white / count = count + 1" {
				layout [ size: 353, 17 ]
			}
		}
		edge Symbol7B0_g8409: Symbol6W -> Symbol7B {
			label L45: "2: Light < black & count >= TickLength & count <= TickLengthMax / count = 0; symbol6 = 1" {
				layout [ size: 633, 17 ]
			}
		}
		edge Symbol6B0_g2487: Symbol6B -> Symbol6B {
			label L46: "1: clock == true & Light < black / count = count + 1" {
				layout [ size: 352, 17 ]
			}
		}
		edge Condition0_g5704: Symbol6B -> Condition {
			label L47: "2: Light > white & count >= 2 * TickLength & count <= 2 * TickLengthMax / count = 0; symbol6 = 0; symbol7 = 0" {
				layout [ size: 768, 17 ]
			}
		}
		edge Symbol7B0_g7789: Symbol7B -> Symbol7B {
			label L48: "1: clock == true & Light < black / count = count + 1" {
				layout [ size: 352, 17 ]
			}
		}
		edge Condition0_g6078: Symbol7B -> Condition {
			label L49: "2: Light > white & count >= TickLength & count <= TickLengthMax / count = 0; symbol7 = 0" {
				layout [ size: 634, 17 ]
			}
		}
		edge Symbol1W0_g5792: Condition -> Symbol1W {
			label L50: "1: NumberOfDigits < 3 / digit[NumberOfDigits] = symbol1 * 1000000 + symbol2 * 100000 + symbol3 * 10000 + symbol4 * 1000 + symbol5 * 100 + symbol6 * 10 + symbol7 * 1; symbol1 = 0; symbol2 = 0; symbol3 = 0; symbol4 = 0; symbol5 = 0; symbol6 = 0; symbol7 = 0; NumberOfDigits++" {
				layout [ size: 1932, 17 ]
			}
		}
		edge Final10: Condition -> Final1 {
			label L51: "2: NumberOfDigits >= 3 / digit[NumberOfDigits] = symbol1 * 1000000 + symbol2 * 100000 + symbol3 * 10000 + symbol4 * 1000 + symbol5 * 100 + symbol6 * 10 + symbol7 * 1" {
				layout [ size: 1172, 17 ]
			}
		}
		edge Final10_g0933: Final1 -> Final1 {
			label L52: "1: clock == true & Light > white / count = count + 1" {
				layout [ size: 353, 17 ]
			}
		}
		edge Final20: Final1 -> Final2 {
			label L53: "2: Light < black & count >= TickLength & count <= TickLengthMax / count = 0" {
				layout [ size: 543, 17 ]
			}
		}
		edge Final20_g6039: Final2 -> Final2 {
			label L54: "1: clock == true & Light < black / count = count + 1" {
				layout [ size: 352, 17 ]
			}
		}
		edge Final30: Final2 -> Final3 {
			label L55: "2: Light > white & count >= TickLength & count <= TickLengthMax / count = 0" {
				layout [ size: 544, 17 ]
			}
		}
		edge Final30_g7324: Final3 -> Final3 {
			label L56: "1: clock == true & Light > white / count = count + 1" {
				layout [ size: 353, 17 ]
			}
		}
		edge Final40: Final3 -> Final4 {
			label L57: "2: Light < black & count >= TickLength & count <= TickLengthMax / count = 0" {
				layout [ size: 543, 17 ]
			}
		}
		edge Final40_g5786: Final4 -> Final4 {
			label L58: "1: clock == true & Light < black / count = count + 1" {
				layout [ size: 352, 17 ]
			}
		}
		edge end0: Final4 -> ^end {
			label L59: "2: Light > white & count >= TickLength & count <= TickLengthMax / count = 0; out = true" {
				layout [ size: 620, 17 ]
			}
		}
		edge end0_g6323: ^end -> ^end {
			label L60: "/ out = false; end = true" {
				layout [ size: 163, 17 ]
			}
		}
	}
}
