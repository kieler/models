graph G1
node barcode_runnerV5 {
	algorithm: org.eclipse.elk.box
	node N1 {
		node calibrateLow {
			layout [ size: 111, 34 ]
		}
		node calibrateHigh {
			layout [ size: 115, 34 ]
		}
		node calculateThresh {
			layout [ size: 135, 34 ]
		}
		node ready {
			layout [ size: 61, 34 ]
		}
		node setup {
			layout [ size: 61, 34 ]
		}
		node readingStartDelim {
			layout [ size: 150, 34 ]
		}
		node readingCodeHigh2Low {
			layout [ size: 183, 34 ]
		}
		node readingCodeLow2High {
			layout [ size: 183, 34 ]
		}
		node calculateT {
			layout [ size: 93, 34 ]
		}
		node decodeData {
			layout [ size: 106, 34 ]
		}
		node decider {
			layout [ size: 74, 34 ]
		}
		node decoder {
			layout [ size: 79, 34 ]
		}
		node display {
			layout [ size: 71, 34 ]
		}
		node positionForRotation {
			layout [ size: 162, 34 ]
		}
		node calculateRotation {
			layout [ size: 144, 34 ]
		}
		node rotate {
			layout [ size: 62, 34 ]
		}
		node rotateNow {
			layout [ size: 94, 34 ]
		}
		edge ready0: calibrateLow -> ready {
			label L1: "1: leftButtonDown / floodlight = true" {
				layout [ size: 252, 17 ]
			}
		}
		edge calibrateLow0: calibrateLow -> calibrateLow {
			label L2: "2: rightButtonDown && !measuring / floodlight = true; measuring = true; lightLevelSum = light_level; num_meas = 1" {
				layout [ size: 808, 17 ]
			}
		}
		edge calibrateLow1: calibrateLow -> calibrateLow {
			label L3: "3: measuring && num_meas != 100 && ten_ms / lightLevelSum = lightLevelSum + light_level; num_meas++; reset_ten_ms = true" {
				layout [ size: 896, 17 ]
			}
		}
		edge calibrateHigh0: calibrateLow -> calibrateHigh {
			label L4: "4: num_meas == 100 / measuring = false; floodlight = false; lightLevelThresh = lightLevelSum / 100; num_meas = 0" {
				layout [ size: 798, 17 ]
			}
		}
		edge calibrateHigh0_g5513: calibrateHigh -> calibrateHigh {
			label L5: "1: leftButtonDown && !measuring / floodlight = true; measuring = true; lightLevelSum = light_level; num_meas = 1" {
				layout [ size: 798, 17 ]
			}
		}
		edge calibrateHigh1: calibrateHigh -> calibrateHigh {
			label L6: "2: measuring && num_meas != 100 && ten_ms / lightLevelSum = lightLevelSum + light_level; num_meas++; reset_ten_ms = true" {
				layout [ size: 896, 17 ]
			}
		}
		edge calculateThresh0: calibrateHigh -> calculateThresh {
			label L7: "3: num_meas == 100 / measuring = false; floodlight = false; num_meas = 0" {
				layout [ size: 513, 17 ]
			}
		}
		edge calculateThresh0_g3044: calculateThresh -> calculateThresh {
			label L8: "1: !measuring / measuring = true; lightLevelThresh = (lightLevelSum / 100 + lightLevelThresh) / 2" {
				layout [ size: 681, 17 ]
			}
		}
		edge ready0_g7174: calculateThresh -> ready {
			label L9: "2: measuring / measuring = false; floodlight = true; db4 = lightLevelThresh; disp4 = true" {
				layout [ size: 613, 17 ]
			}
		}
		edge ready0_g0378: ready -> ready {
			label L10: "1: StartButtonDown / help = true" {
				layout [ size: 227, 17 ]
			}
		}
		edge setup0: ready -> setup {
			label L11: "2: s && help / help = false; reset_s = true; floodlight = true; leftMotorSpeed = 900; rightMotorSpeed = 900" {
				layout [ size: 738, 17 ]
			}
		}
		edge readingStartDelim0: setup -> readingStartDelim {
			label L12: "light_level < lightLevelThresh / startSW1 = true" {
				layout [ size: 334, 17 ]
			}
		}
		edge readingStartDelim0_g7297: readingStartDelim -> readingStartDelim {
			label L13: "1: ten_ms / reset_ten_ms = true; t_tmp = t_tmp + 10" {
				layout [ size: 358, 17 ]
			}
		}
		edge setup0_g6392: readingStartDelim -> setup {
			label L14: "2: t_tmp >= 40 / startSW1 = false; measuring = false; reading = 0; t_tmp = 0; help = false; helper2 = false" {
				layout [ size: 718, 17 ]
			}
		}
		edge readingStartDelim1: readingStartDelim -> readingStartDelim {
			label L15: "3: !help && light_level >= lightLevelThresh / help = true; t_tmp = 0; db4 = 1; disp4 = true" {
				layout [ size: 615, 17 ]
			}
		}
		edge readingStartDelim2: readingStartDelim -> readingStartDelim {
			label L16: "4: help && light_level < lightLevelThresh / helper2 = true; t_tmp = 0; db5 = 1; disp5 = true" {
				layout [ size: 625, 17 ]
			}
		}
		edge readingCodeHigh2Low0: readingStartDelim -> readingCodeHigh2Low {
			label L17: "5: helper2 && light_level > lightLevelThresh / help = false; helper2 = false; t[0] = getCurrentTimeSW1; reading = 1; t_tmp = 0" {
				layout [ size: 872, 17 ]
			}
		}
		edge readingCodeHigh2Low0_g5612: readingCodeHigh2Low -> readingCodeHigh2Low {
			label L18: "1: ten_ms / reset_ten_ms = true; t_tmp = t_tmp + 10" {
				layout [ size: 358, 17 ]
			}
		}
		edge readingCodeLow2High0: readingCodeHigh2Low -> readingCodeLow2High {
			label L19: "2: reading < 21 && light_level < lightLevelThresh / t[reading] = getCurrentTimeSW1; t_tmp = 0; reading++" {
				layout [ size: 740, 17 ]
			}
		}
		edge calculateT0: readingCodeHigh2Low -> calculateT {
			label L20: "3: reading == 21 / rightMotorSpeed = 0; leftMotorSpeed = 0; reading = 0; t_tmp = 0" {
				layout [ size: 574, 17 ]
			}
		}
		edge setup0_g5156: readingCodeHigh2Low -> setup {
			label L21: "4: t_tmp >= 190 / startSW1 = false; measuring = false; reading = 0; t_tmp = 0" {
				layout [ size: 524, 17 ]
			}
		}
		edge readingCodeLow2High0_g9451: readingCodeLow2High -> readingCodeLow2High {
			label L22: "1: ten_ms / reset_ten_ms = true; t_tmp = t_tmp + 10" {
				layout [ size: 358, 17 ]
			}
		}
		edge readingCodeHigh2Low0_g5239: readingCodeLow2High -> readingCodeHigh2Low {
			label L23: "2: light_level > lightLevelThresh / t[reading] = getCurrentTimeSW1; reading++; t_tmp = 0" {
				layout [ size: 624, 17 ]
			}
		}
		edge setup0_g9637: readingCodeLow2High -> setup {
			label L24: "3: t_tmp >= 190 / startSW1 = false; measuring = false; reading = 0; t_tmp = 0" {
				layout [ size: 524, 17 ]
			}
		}
		edge decodeData0: calculateT -> decodeData {
			label L25: "reading == 0 / T = ((t[0] + (t[20] - t[16])) * 1000) / 7; reading = 0; db4 = T; disp4 = true" {
				layout [ size: 576, 17 ]
			}
		}
		edge decodeData0_g2876: decodeData -> decodeData {
			label L26: "1: reading <= 15 / d[reading] = ((t[reading + 1] - t[reading]) * 1000000) / T; reading++" {
				layout [ size: 580, 17 ]
			}
		}
		edge decider0: decodeData -> decider {
			label L27: "2: reading == 16 / reading = 0" {
				layout [ size: 204, 17 ]
			}
		}
		edge decider0_g4766: decider -> decider {
			label L28: "1: reading < 16 && d[reading] < 1500 / d[reading] = 1; reading++" {
				layout [ size: 445, 17 ]
			}
		}
		edge decider1: decider -> decider {
			label L29: "2: reading < 16 && (1500 <= d[reading] && d[reading] < 2500) / d[reading] = 2; reading++; db7 = reading" {
				layout [ size: 722, 17 ]
			}
		}
		edge decider2: decider -> decider {
			label L30: "3: reading < 16 && (2500 <= d[reading] && d[reading] < 3500) / d[reading] = 3; reading++; db7 = reading" {
				layout [ size: 722, 17 ]
			}
		}
		edge decider3: decider -> decider {
			label L31: "4: reading < 16 && 3500 <= d[reading] / d[reading] = 4; reading++" {
				layout [ size: 454, 17 ]
			}
		}
		edge decoder0: decider -> decoder {
			label L32: "5: reading == 16 / reading = 0" {
				layout [ size: 204, 17 ]
			}
		}
		edge decoder0_g0893: decoder -> decoder {
			label L33: "1: reading < 4 && (d[0 + reading * 4] == 3 && d[1 + reading * 4] == 2) / D[reading] = 0; reading++" {
				layout [ size: 665, 17 ]
			}
		}
		edge decoder1: decoder -> decoder {
			label L34: "2: reading < 4 && (d[0 + reading * 4] == 3 && d[1 + reading * 4] == 1) / D[reading] = 9; reading++" {
				layout [ size: 665, 17 ]
			}
		}
		edge decoder2: decoder -> decoder {
			label L35: "3: reading < 4 && (d[0 + reading * 4] == 2 && d[1 + reading * 4] == 2) / D[reading] = 1; reading++" {
				layout [ size: 665, 17 ]
			}
		}
		edge decoder3: decoder -> decoder {
			label L36: "4: reading < 4 && (d[0 + reading * 4] == 2 && d[1 + reading * 4] == 1) / D[reading] = 2; reading++" {
				layout [ size: 665, 17 ]
			}
		}
		edge decoder4: decoder -> decoder {
			label L37: "5: reading < 4 && (d[0 + reading * 4] == 1 && d[1 + reading * 4] == 4) / D[reading] = 3; reading++" {
				layout [ size: 665, 17 ]
			}
		}
		edge decoder5: decoder -> decoder {
			label L38: "6: reading < 4 && (d[0 + reading * 4] == 1 && d[1 + reading * 4] == 3) / D[reading] = 7; reading++" {
				layout [ size: 665, 17 ]
			}
		}
		edge decoder6: decoder -> decoder {
			label L39: "7: reading < 4 && (d[0 + reading * 4] == 1 && d[1 + reading * 4] == 2 && d[2 + reading * 4] == 1) / D[reading] = 8; reading++" {
				layout [ size: 849, 17 ]
			}
		}
		edge decoder7: decoder -> decoder {
			label L40: "8: reading < 4 && (d[0 + reading * 4] == 1 && d[1 + reading * 4] == 2 && d[2 + reading * 4] == 3) / D[reading] = 5; reading++" {
				layout [ size: 849, 17 ]
			}
		}
		edge decoder8: decoder -> decoder {
			label L41: "9: reading < 4 && ((d[0 + reading * 4] == 1 && d[1 + reading * 4] == 1) && d[2 + reading * 4] == 1) / D[reading] = 6; reading++" {
				layout [ size: 859, 17 ]
			}
		}
		edge decoder9: decoder -> decoder {
			label L42: "10: reading < 4 && ((d[0 + reading * 4] == 1 && d[1 + reading * 4] == 1) && d[2 + reading * 4] == 3) / D[reading] = 4; reading++" {
				layout [ size: 867, 17 ]
			}
		}
		edge decoder10: decoder -> decoder {
			label L43: "11: reading == 4 / D[0] = 100 * D[0] + 10 * D[1] + D[2]; reading++" {
				layout [ size: 438, 17 ]
			}
		}
		edge display0: decoder -> display {
			label L44: "12: reading == 5 && D[0] >= 500 / D[0] = D[0] - 1000; twoBeep = true; reading = 0" {
				layout [ size: 558, 17 ]
			}
		}
		edge display1: decoder -> display {
			label L45: "13: reading == 5 && D[0] < 500 / twoBeep = true; reading = 0" {
				layout [ size: 421, 17 ]
			}
		}
		edge display0_g0348: display -> display {
			label L46: "1: twoBeep && num_meas == 0 / db6 = D[0]; disp6 = true; twoBeep = false" {
				layout [ size: 516, 17 ]
			}
		}
		edge positionForRotation0: display -> positionForRotation {
			label L47: "2: !twoBeep / rightMotorSpeed = -900; leftMotorSpeed = -900" {
				layout [ size: 428, 17 ]
			}
		}
		edge calculateRotation0: positionForRotation -> calculateRotation {
			label L48: "hun_ms / leftMotorSpeed = 0; rightMotorSpeed = 0; reset_hun_ms = true" {
				layout [ size: 511, 17 ]
			}
		}
		edge calculateRotation0_g5907: calculateRotation -> calculateRotation {
			label L49: "1: !help / D[0] = D[0] % 360; help = true" {
				layout [ size: 268, 17 ]
			}
		}
		edge rotate0: calculateRotation -> rotate {
			label L50: "2: help && D[0] >= 180 / help = false; D[0] = (-360) + D[0]" {
				layout [ size: 389, 17 ]
			}
		}
		edge rotate1: calculateRotation -> rotate {
			label L51: "3: help && D[0] <= -180 / help = false; D[0] = 360 + D[0]" {
				layout [ size: 379, 17 ]
			}
		}
		edge rotate2: calculateRotation -> rotate {
			label L52: "4: help && D[0] < 180 && D[0] > -180 / help = false" {
				layout [ size: 346, 17 ]
			}
		}
		edge rotate0_g5634: rotate -> rotate {
			label L53: "1: !help && hun_ms / D[0] = (9700 * D[0]) / 1000; help = true; reset_hun_ms = true" {
				layout [ size: 562, 17 ]
			}
		}
		edge rotateNow0: rotate -> rotateNow {
			label L54: "2: D[0] >= 0 && help / help = false; rotationSpeed = 900; rotateDeg = D[0]; rotateNow = true" {
				layout [ size: 636, 17 ]
			}
		}
		edge rotateNow1: rotate -> rotateNow {
			label L55: "3: D[0] < 0 && help / help = false; rotationSpeed = -890; rotateDeg = D[0]; rotateNow = true" {
				layout [ size: 632, 17 ]
			}
		}
		edge rotateNow0_g9548: rotateNow -> rotateNow {
			label L56: "1: hun_ms / help = true" {
				layout [ size: 160, 17 ]
			}
		}
		edge setup0_g1702: rotateNow -> setup {
			label L57: "2: help / help = false; startSW1 = false; measuring = false; floodlight = true; rightMotorSpeed = 900; leftMotorSpeed = 900; db7 = 1; disp7 = true" {
				layout [ size: 998, 17 ]
			}
		}
	}
}
